#!/usr/bin/env perl

# This chunk of stuff was generated by App::FatPacker. To find the original
# file's code, look for the end of this BEGIN block or the string 'FATPACK'
BEGIN {
my %fatpacked;

s/^  //mg for values %fatpacked;

my $class = 'FatPacked::'.(0+\%fatpacked);
no strict 'refs';
*{"${class}::files"} = sub { keys %{$_[0]} };

if ($] < 5.008) {
  *{"${class}::INC"} = sub {
    if (my $fat = $_[0]{$_[1]}) {
      my $pos = 0;
      my $last = length $fat;
      return (sub {
        return 0 if $pos == $last;
        my $next = (1 + index $fat, "\n", $pos) || $last;
        $_ .= substr $fat, $pos, $next - $pos;
        $pos = $next;
        return 1;
      });
    }
  };
}

else {
  *{"${class}::INC"} = sub {
    if (my $fat = $_[0]{$_[1]}) {
      open my $fh, '<', \$fat
        or die "FatPacker error loading $_[1] (could be a perl installation issue?)";
      return $fh;
    }
    return;
  };
}

unshift @INC, bless \%fatpacked, $class;
  } # END OF FATPACK CODE


#====================================================================================================================================================#
#<use>
$|++; #---turn on the auto flush for the progress bar
no warnings 'utf8';
use warnings;
use strict;
use Getopt::Long 'HelpMessage';
use Time::HiRes qw( time );
use File::Spec::Functions qw(rel2abs abs2rel);
use Cwd 'abs_path';
#<\use>
#====================================================================================================================================================#

#====================================================================================================================================================#
#<doc>
=head1 SYNOPSIS

           5'-O~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~AAA-3'
                        O~~~AA      O~~         O~       O~~~~~~~AO~~~~~~~~A
                      O~~    O~~ O~~   O~~     O~O~~     O~~      O~~       
                       O~~      O~~           O~  O~~    O~~      O~~       
                         O~~    O~~          O~~   O~~   O~~~~~AA O~~~~~~A  
                            O~~ O~~         O~~~~~A O~~  O~~      O~~       
                      O~~    O~~ O~~   O~~ O~~       O~~ O~~      O~~       
                        O~~~~A     O~~~   O~~         O~~O~~      O~~~~~~~AA
       ┌─ᐅ 5'-O~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-3'
 ...===┴========================================================================================...

                      Single Cell Analysis of Five-prime End (SCAFE) Tool Suite 
                              ---> &download.demo.input <---
                        <--- &download, demo input data for testing --->

 Description:
   This scripts &download demo data and save in ./demo/input dir.

 Usage:
   &download.demo.input

 Dependencies:
   wget
   tar

 For demo, cd to SCAFE dir and run,
   scafe.&download.demo.input

=head1 VERSION

v0.9.0-beta [March 20, 2021]
	-Initial pre-release

v1.0.0 [June 6, 2022]
	-Updated to v1.0.0 demo data

v1.0.1 [June 26, 2022]
	-No update

=cut
#<\doc>
#====================================================================================================================================================#

#====================================================================================================================================================#
#<lastCmdCalled>
#
#	notCalledBefore
#
#	notCalledBefore
#
#<\lastCmdCalled>
#====================================================================================================================================================#

#====================================================================================================================================================#
#<global>
#<\global>
#====================================================================================================================================================#

#====================================================================================================================================================#
{	#Main sections lexical scope starts
#====================================================================================================================================================#

#====================================================================================================================================================#
#	section 0_startTasks
#
#<section ID="startTasks" num="0">
my $demo_data_url = "https://www.dropbox.com/s/8cx0rdrghy3ntf0/input.tar.gz";
&readParameters();#->165
my ($scafe_dir, $script_dir, $demo_dir) = &prepDir();#->139
&download($demo_dir, $demo_data_url);#->116
#<\section>
#====================================================================================================================================================#

#====================================================================================================================================================#
#	section 1_run
#
#<section ID="run" num="1">
#<\section>
#====================================================================================================================================================#

#====================================================================================================================================================#
}	#Main sections lexical scope ends
#====================================================================================================================================================#

#====================================================================================================================================================#
#List of subroutines by category
#
#	general [n=1]:
#		readParameters
#
#	unassigned [n=2]:
#		download, prepDir
#
#====================================================================================================================================================#

sub download {
#....................................................................................................................................................#
#	subroutineCategory: unassigned
#	dependOnSub: >none
#	appearInSub: >none
#	primaryAppearInSection: 0_startTasks|83
#	secondaryAppearInSection: >none
#	input: $demo_data_url, $demo_dir
#	output: 
#	toCall: &download($demo_dir, $demo_data_url);
#	calledInLine: 89
#....................................................................................................................................................#
	my ($demo_dir, $demo_data_url) = @_;
	
	my $tar_gz_path = "$demo_dir/input.tar.gz";
	system ("rm -f $tar_gz_path");
	system ("rm -rf $demo_dir/input/");
	system ("wget $demo_data_url -P $demo_dir");
	system ("tar -xzvf $tar_gz_path -C $demo_dir");
	system ("rm $tar_gz_path");

	return ();
}
sub prepDir {
#....................................................................................................................................................#
#	subroutineCategory: unassigned
#	dependOnSub: >none
#	appearInSub: >none
#	primaryAppearInSection: 0_startTasks|83
#	secondaryAppearInSection: >none
#	input: none
#	output: $demo_dir, $scafe_dir, $script_dir
#	toCall: my ($scafe_dir, $script_dir, $demo_dir) = &prepDir();
#	calledInLine: 88
#....................................................................................................................................................#

	my $scriptAbsPath = abs_path($0);
	my @path_split = split /\//, $scriptAbsPath;
	my $scafe_dir_index = $#path_split-2;
	my $script_dir_index = $#path_split-1;
	my $scafe_dir = join "/", @path_split[0..$scafe_dir_index];
	my $script_dir = join "/", @path_split[0..$script_dir_index];

	my @mkDirAry = ();
	my $demo_dir = $scafe_dir."/demo/"; push @mkDirAry, $demo_dir;
	foreach my $dir (@mkDirAry) {system ("mkdir -pm 755 $dir");}

	return ($scafe_dir, $script_dir, $demo_dir);
}
sub readParameters {
#....................................................................................................................................................#
#	subroutineCategory: general
#	dependOnSub: >none
#	appearInSub: >none
#	primaryAppearInSection: 0_startTasks|83
#	secondaryAppearInSection: >none
#	input: none
#	output: 
#	toCall: &readParameters();
#	calledInLine: 87
#....................................................................................................................................................#
	
	GetOptions 	(
		'help'				=>	sub { HelpMessage(0) },
	);

	return();

}

exit;


















































